@page
@model WebApplication125.Pages.Game.GameModel
@{
}
 <div class="modal fade" id="resultModal" tabindex="-1" role="dialog" aria-labelledby="resultModalLabel" aria-hidden="true">
     <form method="post">  
     <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="resultModalLabel">Resultados de la Partida</h5>
                </div>
                <div class="modal-body">
                   <div class="main">
                   

    <div class="mb-3">
        <label for="eaten" class="form-label">Alimento capturado</label>
        <input id="eatenInput" type="number"
               class="form-control"
               readonly="true"
               aria-describedby="helpEaten"
               placeholder="Ej: 5"
               asp-for="Score.eaten"
               required />
        <small id="helpEaten" class="form-text text-muted">Comida Consumida.</small>
    </div>

    <div class="mb-3">
        <label for="duration" class="form-label">Tiempo de Juego</label>
        <input id="durationInput" type="text"
               class="form-control"
               readonly="true"
               aria-describedby="helpDuration"
               placeholder="Ej: 30 minutos"
               asp-for="Score.duration"
               required />
        <small id="helpDuration" class="form-text text-muted">Cuánto tiempo la serpiente estuvo viva</small>
    </div>
                    <canvas class="gameResult" id="gameCanvasResult" width="300" height="300"></canvas>
                   </div>            
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary" id="btnBuscarLeaderboards">Buscar Leaderboards</button>
                </div>
                </form>
            </div>
        </div>
</div>
<div class="Main">
    <h2>Juego de Snake</h2>
    <h3>Resultado de la Partida</h3>
    <div class="results">
        <label>Duración:</label>
        <input type="text" id="duracion" class="readonly-field" readonly>
    </div>
    <canvas class="game" id="gameCanvas" width="300" height="300"></canvas>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const canvas = document.getElementById("gameCanvas");
        const ctx = canvas.getContext("2d");
        const resultCanvas = document.getElementById("gameCanvasResult");
        const resultCtx = resultCanvas.getContext("2d");
        const gridSize = 10;
        const tileCount = canvas.width / gridSize;
        let snake = [{ x: 5, y: 5 }];
        let food = { x: 3, y: 3 };
        let direction = { x: 0, y: 0 };
        let nextDirection = { x: 0, y: 0 };
        let eaten=0;
        let gameInterval;
        let startTime;

        function draw() {
            ctx.fillStyle = "white";
            ctx.fillRect(0, 0, canvas.width, canvas.height);

            ctx.fillStyle = "green";
            snake.forEach(segment => {
                ctx.fillRect(segment.x * gridSize, segment.y * gridSize, gridSize, gridSize);
            });
            ctx.fillStyle = "red";
            ctx.fillRect(food.x * gridSize, food.y * gridSize, gridSize, gridSize);
        }

        function copyToResultCanvas() {
            resultCtx.clearRect(0, 0, resultCanvas.width, resultCanvas.height); 
            resultCtx.drawImage(canvas, 0, 0); 
        }

        function move() {
            direction = { ...nextDirection };
            document.getElementById("duracion").value = ((Date.now() - startTime) / 1000).toFixed(2) + "s";
            if (direction.x === 0 && direction.y === 0) return;

            const head = { x: snake[0].x + direction.x, y: snake[0].y + direction.y };

            // End the game 
            if (head.x < 0 || head.x >= tileCount || head.y < 0 || head.y >= tileCount ||
                snake.some(segment => segment.x === head.x && segment.y === head.y)) {
                clearInterval(gameInterval);
                document.getElementById("eatenInput").value = eaten;
                document.getElementById("durationInput").value = ((Date.now() - startTime) / 1000).toFixed(2) + "s";
                copyToResultCanvas(); 
                $('#resultModal').modal('show'); 
                return;
            }
            snake.unshift(head);

            if (head.x === food.x && head.y === food.y) {
                eaten++;
                food = { x: Math.floor(Math.random() * tileCount), y: Math.floor(Math.random() * tileCount) };
            } else {
                snake.pop();
            }
            draw();
        }

        function startGame() {
            snake = [{ x: 5, y: 5 }];
            food = { x: 3, y: 3 };
            nextDirection = { x: 0, y: 0 };
            startTime = Date.now();
            draw();
            clearInterval(gameInterval);
            gameInterval = setInterval(move, 100);
        }

        document.addEventListener("keydown", function (event) {
            if (event.key === "w" || event.key === "a" || event.key === "s" || event.key === "d") {
                if (!startTime) { 
                    startGame();
                }
                switch (event.key) {
                    case "w": if (direction.y === 0) nextDirection = { x: 0, y: -1 }; break;
                    case "s": if (direction.y === 0) nextDirection = { x: 0, y: 1 }; break;
                    case "a": if (direction.x === 0) nextDirection = { x: -1, y: 0 }; break;
                    case "d": if (direction.x === 0) nextDirection = { x: 1, y: 0 }; break;
                }
            }
        });

        draw(); 
    });
</script>

    <style>
        .Main {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
        }
        canvas {
            border: 2px solid black;
            margin-bottom: 20px;
            margin-top: 20px;
            margin-left: auto;
            margin-right: auto;
        }
        .readonly-field {
            width: 200px;
            margin-bottom: 10px;
            border: none;
        }
    </style>
    <div id="controls">
        <h2>Controles</h2>
        <p>Usa las teclas <strong>WASD</strong> para mover la serpiente.</p>
        <div id="placeholder">[W] [A] [S] [D]</div>
    </div>
</div>
